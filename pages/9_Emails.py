import streamlit as st
import pandas as pd
import db
import db_operations as ops
from datetime import date, timedelta

st.set_page_config(layout="wide")
st.title("Email Generation and Log")

st.header("Generate Weekly Schedule Emails")
st.info("This tool finds all players scheduled for sessions in the selected date range, generates the reminder emails, and logs them to the database. For this demo, emails are not actually sent but are displayed in the log below.", icon="ðŸ“§")

# --- UI for Triggering Email Generation ---
col1, col2 = st.columns(2)
with col1:
    start_date = st.date_input("Start of Week", value=date.today())
with col2:
    end_date = st.date_input("End of Week", value=date.today() + timedelta(days=7))

if st.button("Generate and Log Weekly Emails"):
    with st.spinner("Finding sessions, generating content, and logging emails..."):
        try:
            # Call our new, powerful backend function
            num_generated = db.execute_change(ops.generate_and_log_weekly_emails, params={
                "start_date": start_date,
                "end_date": end_date
            })
            
            if num_generated > 0:
                st.success(f"Successfully generated and logged {num_generated} emails!")
                st.balloons()
            else:
                st.warning("No scheduled sessions found in this period. No emails were generated.")
            
            st.rerun() # Refresh the log view below
        except db.RuleViolation as e:
            st.error(f"An error occurred: {e}")

st.divider()

# --- UI for Viewing the Email Log ---
st.header("Email Log")
st.write("This table shows a log of all emails that have been generated by the system.")

# Use our generic search function to get the log
email_log = db.execute_query(ops.search, params={"table_name": "emails"})

if not email_log:
    st.info("The email log is empty.")
else:
    df = pd.DataFrame(email_log)
    # Reorder columns for better display
    df = df[['send_at', 'sender_name', 'receiver_email', 'email_subject', 'body', 'session_id', 'email_id']]
    st.dataframe(df, use_container_width=True, hide_index=True)